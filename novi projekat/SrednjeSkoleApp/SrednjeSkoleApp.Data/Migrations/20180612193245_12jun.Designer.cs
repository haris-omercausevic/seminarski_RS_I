// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using SrednjeSkoleApp.Data.EF;
using System;

namespace SrednjeSkoleApp.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20180612193245_12jun")]
    partial class _12jun
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.AutorizacijskiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IpAdresa");

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Vrijednost");

                    b.Property<DateTime>("VrijemeEvidentiranja");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("AutorizacijskiToken");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Cas", b =>
                {
                    b.Property<int>("CasId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datum");

                    b.Property<string>("Naslov");

                    b.Property<int>("NastavnikId");

                    b.Property<string>("Opis");

                    b.HasKey("CasId");

                    b.HasIndex("NastavnikId");

                    b.ToTable("Casovi");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Izostanak", b =>
                {
                    b.Property<int>("IzostanakId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CasId");

                    b.Property<string>("Komentar");

                    b.Property<string>("Razlog");

                    b.Property<int>("UcenikId");

                    b.HasKey("IzostanakId");

                    b.HasIndex("CasId");

                    b.HasIndex("UcenikId");

                    b.ToTable("Izostanci");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisniciUlogeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KorisnikID");

                    b.Property<int>("UlogaID");

                    b.HasKey("KorisniciUlogeId");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("UlogaID");

                    b.ToTable("KorisniciUloge");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Aktivan");

                    b.Property<DateTime>("DatumRodjenja");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Ime");

                    b.Property<string>("JMBG");

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("LozinkaHash");

                    b.Property<string>("LozinkaSalt");

                    b.Property<string>("MjestoRodjenja");

                    b.Property<string>("Prebivaliste");

                    b.Property<string>("Prezime");

                    b.Property<string>("Spol");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.KorisnikKontakt", b =>
                {
                    b.Property<int>("KorisnikKontaktId");

                    b.Property<string>("Adresa");

                    b.Property<string>("Email");

                    b.Property<string>("Grad");

                    b.Property<string>("Opstina");

                    b.Property<string>("Telefon");

                    b.HasKey("KorisnikKontaktId");

                    b.ToTable("KorisnikKontakt");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Materijal", b =>
                {
                    b.Property<int>("MaterijalId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Fajl");

                    b.Property<string>("Napomena");

                    b.Property<int>("NastavnikId");

                    b.Property<string>("Naziv");

                    b.Property<int>("SkolskaGodinaId");

                    b.HasKey("MaterijalId");

                    b.HasIndex("NastavnikId");

                    b.HasIndex("SkolskaGodinaId");

                    b.ToTable("Materijali");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Obavijest", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KorisnikId");

                    b.Property<string>("Naslov");

                    b.Property<string>("Tekst");

                    b.HasKey("ObavijestId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijesti");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Predaje", b =>
                {
                    b.Property<int>("PredajeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NastavnikId");

                    b.Property<int>("SkolskaGodinaId");

                    b.Property<int>("SmjerPredmetId");

                    b.HasKey("PredajeId");

                    b.HasIndex("NastavnikId");

                    b.HasIndex("SkolskaGodinaId");

                    b.HasIndex("SmjerPredmetId");

                    b.ToTable("Predaje");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Predmet", b =>
                {
                    b.Property<int>("PredmetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv")
                        .IsRequired();

                    b.Property<string>("Oznaka")
                        .IsRequired();

                    b.HasKey("PredmetId");

                    b.ToTable("Predmet");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Razred", b =>
                {
                    b.Property<int>("RazredId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Odjeljenje");

                    b.Property<string>("Oznaka");

                    b.Property<int>("RazredBrojcano");

                    b.Property<int>("RazrednikId");

                    b.Property<int>("SkolskaGodinaId");

                    b.Property<int>("SmjerId");

                    b.HasKey("RazredId");

                    b.HasIndex("RazrednikId");

                    b.HasIndex("SkolskaGodinaId");

                    b.HasIndex("SmjerId");

                    b.ToTable("Razred");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.SkolskaGodina", b =>
                {
                    b.Property<int>("SkolskaGodinaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("SkolskaGodinaId");

                    b.ToTable("SkolskaGodina");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Smjer", b =>
                {
                    b.Property<int>("SmjerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.Property<int>("SkolskaGodinaId");

                    b.HasKey("SmjerId");

                    b.HasIndex("SkolskaGodinaId");

                    b.ToTable("Smjerovi");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.SmjerPredmet", b =>
                {
                    b.Property<int>("SmjerPredmetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrojCasova");

                    b.Property<int>("PredmetId");

                    b.Property<int>("SmjerId");

                    b.HasKey("SmjerPredmetId");

                    b.HasIndex("PredmetId");

                    b.HasIndex("SmjerId");

                    b.ToTable("SmjerPredmet");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikCasovi", b =>
                {
                    b.Property<int>("UcenikCasoviId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CasId");

                    b.Property<int>("UcenikId");

                    b.HasKey("UcenikCasoviId");

                    b.HasIndex("CasId");

                    b.HasIndex("UcenikId");

                    b.ToTable("UceniciCasovi");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikOcjene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datum");

                    b.Property<string>("Napomena");

                    b.Property<int>("PredajeId");

                    b.Property<string>("TipOcjene");

                    b.Property<int>("UcenikId");

                    b.Property<int>("Vrijednost");

                    b.HasKey("Id");

                    b.HasIndex("PredajeId");

                    b.HasIndex("UcenikId");

                    b.ToTable("UceniciOcjene");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikRazredi", b =>
                {
                    b.Property<int>("UcenikRazrediId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RazredId");

                    b.Property<int>("RedniBroj");

                    b.Property<string>("SkolskaGodina");

                    b.Property<int>("UcenikId");

                    b.HasKey("UcenikRazrediId");

                    b.HasIndex("RazredId");

                    b.HasIndex("UcenikId");

                    b.ToTable("UceniciRazredi");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Administrator");

                    b.Property<bool>("Nastavnik");

                    b.Property<string>("Naziv");

                    b.Property<bool>("Roditelj");

                    b.Property<bool>("SuperAdministrator");

                    b.Property<bool>("Ucenik");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Nastavnik", b =>
                {
                    b.HasBaseType("SrednjeSkoleApp.Data.Models.Korisnik");

                    b.Property<DateTime>("DatumIzboraUZvanje");

                    b.Property<int>("GodinaZaposlenja");

                    b.Property<string>("NaucnaOblast");

                    b.Property<string>("Zvanje");

                    b.ToTable("Nastavnik");

                    b.HasDiscriminator().HasValue("Nastavnik");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Ucenik", b =>
                {
                    b.HasBaseType("SrednjeSkoleApp.Data.Models.Korisnik");

                    b.Property<int>("GodinaUpisa");

                    b.Property<string>("ImeRoditelja");

                    b.Property<string>("NazivOsnovneSkole");

                    b.Property<double?>("ProsjekOcjenaOsnovnaSkola");

                    b.Property<int>("SmjerId");

                    b.HasIndex("SmjerId");

                    b.ToTable("Ucenik");

                    b.HasDiscriminator().HasValue("Ucenik");
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.AutorizacijskiToken", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Cas", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Izostanak", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Cas", "Cas")
                        .WithMany()
                        .HasForeignKey("CasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.KorisniciUloge", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.KorisnikKontakt", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Korisnik", "Korisnik")
                        .WithOne("Kontakt")
                        .HasForeignKey("SrednjeSkoleApp.Data.Models.KorisnikKontakt", "KorisnikKontaktId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Materijal", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.SkolskaGodina", "SkolskaGodina")
                        .WithMany()
                        .HasForeignKey("SkolskaGodinaId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Obavijest", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Predaje", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.SkolskaGodina", "SkolskaGodina")
                        .WithMany()
                        .HasForeignKey("SkolskaGodinaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SrednjeSkoleApp.Data.Models.SmjerPredmet", "SmjerPredmet")
                        .WithMany()
                        .HasForeignKey("SmjerPredmetId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Razred", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Nastavnik", "Razrednik")
                        .WithMany()
                        .HasForeignKey("RazrednikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.SkolskaGodina", "SkolskaGodina")
                        .WithMany()
                        .HasForeignKey("SkolskaGodinaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Smjer", "Smjer")
                        .WithMany()
                        .HasForeignKey("SmjerId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Smjer", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.SkolskaGodina", "SkolskaGodina")
                        .WithMany()
                        .HasForeignKey("SkolskaGodinaId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.SmjerPredmet", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Smjer", "Smjer")
                        .WithMany()
                        .HasForeignKey("SmjerId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikCasovi", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Cas", "Cas")
                        .WithMany()
                        .HasForeignKey("CasId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikOcjene", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Predaje", "Predaje")
                        .WithMany()
                        .HasForeignKey("PredajeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.UcenikRazredi", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Razred", "Razred")
                        .WithMany()
                        .HasForeignKey("RazredId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrednjeSkoleApp.Data.Models.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Restrict);
            ***REMOVED***);

            modelBuilder.Entity("SrednjeSkoleApp.Data.Models.Ucenik", b =>
                {
                    b.HasOne("SrednjeSkoleApp.Data.Models.Smjer", "Smjer")
                        .WithMany()
                        .HasForeignKey("SmjerId")
                        .OnDelete(DeleteBehavior.Cascade);
            ***REMOVED***);
#pragma warning restore 612, 618
    ***REMOVED***
***REMOVED***
***REMOVED***
